<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Notes.txt</title><link>/posts/</link><description>Recent content in Posts on Notes.txt</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 20 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Looking through the windows: A pragmatic approach for dylib hijacking detection</title><link>/posts/dylib_dll_detection/</link><pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate><guid>/posts/dylib_dll_detection/</guid><description>&lt;p&gt;Inspired by Patrick Wardle&amp;rsquo;s talk at &lt;a href="https://objectivebythesea.org/v8/"&gt;OBTSv8&lt;/a&gt; (Dylib Hijacking on macOS: Dead or Alive?) I wanted to ask the question “What can we learn from DLL hijacking on Windows to improve dylib hijacking detection on macOS?”&lt;/p&gt;</description></item></channel></rss>